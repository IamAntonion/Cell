/*
Устройство хранения данных типа лента (Tape) предназначено для последовательной записи и чтения данных. 
Считывающая/записывающая магнитная головка неподвижна во время чтения и записи, а лента имеет возможность двигаться в обоих направлениях. 
Запись и чтение информации возможны в ячейку ленты, на которой в данный момент находится магнитная головка. 
Перемещения ленты – затратная по времени операция – лента не предназначена для произвольного доступа.

Имеется входная лента длины N (где N – велико), содержащая элементы типа integer (2^32). 
Имеется выходная лента такой же длины. Необходимо записать в выходную ленту отсортированные по возрастанию элементы с входной ленты. 
Есть ограничение по использованию оперативной памяти – не более M байт (M может быть < N, т.е. загрузить все данные с ленты в оперативную память не получится). 
Для реализации алгоритма можно использовать разумное количество временных лент, 
т.е. лент, на которых можно хранить какую-то временную информацию, необходимую в процессе работы алгоритма.

Необходимо создать проект С++, компилируемый в консольное приложение, которое реализует алгоритм сортировки данных с входной ленты на выходную. Необходимо сделать следующее:
• Определить интерфейс для работы с устройством типа лента.
• Написать класс, реализующий этот интерфейс и эмулирующий работу с лентой посредством обычного файла. 
Должно быть возможно сконфигурировать (без перекомпиляции – например, через внешний конфигурационный файл, 
который будет прочитан на старте приложения) задержки по записи/чтению элемента с ленты, перемотки ленты, и сдвига ленты на одну позицию.
• Файлы временных лент можно сохранять в директорию tmp.
• Написать класс, реализующий алгоритм сортировки данных с входной ленты на выходную.
• Консольное приложение должно принимать на вход имя входного и выходного файлов и производить сортировку.
• Желательно написать юнит-тесты.
*/

// добавить конфиг

// cmake --build. --config Release --target Tape

#include "SorterTape.h"

int main (int argc, char* argv[]) {   
    std::cout << argv[0];
    std::cout << "Enter the input file name \n";
    std::string input;
    std::cin >> input;
    FileTape inputTape(input);
    inputTape.Read();

    std::cout << "Enter the output file name \n";
    std::string output;
    std::cin >> output;
    FileTape outputTape(output);
    
    int size = inputTape.Size();
    for (int i = 0; i != size; ++i) {
        outputTape.Write(inputTape.GetValue());
    }

    SorterTape sort(inputTape, outputTape);
    std::cout << "OK!\n";

    return 0;
}